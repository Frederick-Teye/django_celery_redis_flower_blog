services:
  # Django Web Application Service
  web:
    build: .
    command: /app/entrypoint.sh
    volumes:
      - .:/app
      - static_data:/app/static_cdn
    ports:
      - "8000:8000"
    # We use env_file to load the bulk of our settings like SECRET_KEY, DEBUG, etc.
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - SITE_DOMAIN=localhost:8000
      - SITE_NAME=TTS_Project Dev
      - DJANGO_SETTINGS_MODULE=tts_project.settings.dev
    depends_on:
      - db
      - redis
    networks:
      - app_network

  # Celery Worker Service
  celery_worker:
    build: .
    command: celery -A tts_project.settings.celery worker -l info
    volumes:
      - .:/app
      - media_data:/app/media
    env_file:
      - .env
    # Add the user directive
    user: "appuser:appgroup"
    depends_on:
      - web
      - redis
    networks:
      - app_network
      
  # Redis Service
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  # PostgreSQL Database Service
  db:
    image: postgres:15-alpine
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - app_network

# Define named volumes for persistent data storage.
volumes:
  pg_data:
  redis_data:
  media_data:
  static_data:

# Define a custom bridge network for internal communication.
networks:
  app_network:
    driver: bridge